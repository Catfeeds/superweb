<?php

namespace backend\controllers;

use backend\models\importTextForm;
use Yii;
use yii\web\NotFoundHttpException;
use yii\web\Response;
use yii\widgets\ActiveForm;
use common\models\MainClass;
use common\models\OttChannel;
use common\models\SubClass;
use common\models\search\SubClassSearch;

/**
 * SubClassController implements the CRUD actions for SubClass model.
 */
class SubClassController extends BaseController
{
    public $mainClass;

    public function beforeAction($action)
    {
        parent::beforeAction($action); // TODO: Change the autogenerated stub
        $main_class_id = Yii::$app->request->get('main-id');
        if ($main_class_id) {
            $this->mainClass = MainClass::findOne(['id' => $main_class_id]);
        }
        return true;

    }

    /**
     * Lists all SubClass models.
     * @return mixed
     */
    public function actionIndex()
    {
        $main_id = Yii::$app->request->get('main-id');

        $searchModel = new SubClassSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams, ['main_class_id' => $main_id]);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
            'mainClass' => $this->mainClass
        ]);
    }

    /**
     * Displays a single SubClass model.
     * @param integer $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
            'mainClass' => $this->mainClass
        ]);
    }

    /**
     * Creates a new SubClass model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $main_class_id = Yii::$app->request->get('main_id');

        $model = new SubClass();
        $model->main_class_id = $main_class_id;
        $model->sort = 0;

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            Yii::$app->session->setFlash('success', '创建成功');
            return $this->redirect(['index', 'main-id' => $model->main_class_id]);
        } else {
            return $this->renderAjax('create', ['model' => $model]);
        }
    }

    public function actionValidateForm()
    {
        Yii::$app->response->format = Response::FORMAT_JSON;
        $model = new SubClass();
        $model->load(Yii::$app->request->post());

        return ActiveForm::validate($model);
    }

    /**
     * Updates an existing SubClass model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            return $this->redirect(['view', 'id' => $model->id]);
        }

        return $this->render('update', [
            'model' => $model,
            'mainClass' => $this->mainClass
        ]);
    }

    /**
     * Deletes an existing SubClass model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionDelete($id)
    {
        $this->findModel($id)->delete();

        return $this->redirect(['index']);
    }

    /**
     * Finds the SubClass model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return SubClass the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = SubClass::findOne($id)) !== null) {
            return $model;
        }

        throw new NotFoundHttpException('The requested page does not exist.');
    }

    /**
     * 重新排列频道号码
     * @param $main_class_id
     * @return Response
     */
    public function actionResetNumber($main_class_id)
    {

        $subClasses = SubClass::find()
                           ->where(['main_class_id' => $main_class_id])
                           ->orderBy(['sort' => SORT_ASC])
                           ->with('ownChannel')
                           ->all();
        $start = 1;

        foreach ($subClasses as $subClass) {
            if (!empty($subClass->ownChannel)) {
                $channels = $subClass->ownChannel;
                foreach ($channels as $channel) {
                    if ($channel instanceof  OttChannel) {
                        if ($channel->use_flag) {
                            $channel->channel_number = $start++;
                        }else {
                            $channel->channel_number = '0';
                        }
                        $channel->save(false);
                    }
                }
            }
        }

        $this->setFlash('info', '重新排列频道号成功');

        return $this->redirect(Yii::$app->request->referrer);
    }

    public function actionImportViaText()
    {
        $importForm = new importTextForm();

        if ($importForm->load(Yii::$app->request->post()) && $importForm->validate()) {
            if ($importNum = $importForm->import()) {
                $this->setFlash('success', "导入成功:本次导入{$importNum}条");
            } else {
                $this->setFlash('warning', "导入0条");
            }

             return $this->redirect(['main-class/index']);
        }

        return $this->render('import-via-text', [
            'model' => $importForm
        ]);
    }

}
